package com.teoware.refapp.dao.test;

public final class TestDataSourceMetaData {

	public static final String CREATE_SCHEMA_REFAPP_STATEMENT = "CREATE SCHEMA REFAPP AUTHORIZATION DBA";

	public static final String CREATE_TABLE_REF_USER_STATUS_STATEMENT = "CREATE TABLE REFAPP.REF_USER_STATUS ("
			+ "STATUS VARCHAR(10) NOT NULL, " + "DESCRIPTION VARCHAR(50) NOT NULL, "
			+ "CONSTRAINT REF_USERS_STATUS_UC UNIQUE (STATUS))";

	public static final String CREATE_TABLE_REF_GENDER_STATEMENT = "CREATE TABLE REFAPP.REF_GENDER ("
			+ "GENDER VARCHAR(10) NOT NULL, " + "DESCRIPTION VARCHAR(50) NOT NULL, "
			+ "CONSTRAINT REF_GENDER_UC UNIQUE (GENDER))";

	public static final String CREATE_TABLE_USERS_STATEMENT = "CREATE TABLE REFAPP.USERS ("
			+ "ID BIGINT GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1) NOT NULL, "
			+ "USERNAME VARCHAR(20) NOT NULL, " + "CONSTRAINT USERS_PK PRIMARY KEY (ID), "
			+ "CONSTRAINT USERS_UC1 UNIQUE (USERNAME))";

	public static final String CREATE_TABLE_USER_DETAILS_STATEMENT = "CREATE TABLE REFAPP.USER_DETAILS ("
			+ "ID BIGINT GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1) NOT NULL, "
			+ "USER_ID BIGINT NOT NULL, " + "FIRSTNAME VARCHAR(50) NOT NULL, " + "LASTNAME VARCHAR(50) NOT NULL, "
			+ "BIRTHDATE DATE NOT NULL, " + "GENDER VARCHAR(10) NOT NULL, " + "EMAIL VARCHAR(50) NOT NULL, "
			+ "PHONE VARCHAR(50), " + "CONSTRAINT USER_DETAILS_PK PRIMARY KEY (ID), "
			+ "CONSTRAINT USER_DETAILS_FK1 FOREIGN KEY (USER_ID) REFERENCES REFAPP.USERS (ID) ON DELETE CASCADE, "
			+ "CONSTRAINT USER_DETAILS_FK2 FOREIGN KEY (GENDER) REFERENCES REFAPP.REF_GENDER (GENDER), "
			+ "CONSTRAINT USER_DETAILS_UC1 UNIQUE (EMAIL))";

	public static final String CREATE_TABLE_USER_STATUS_STATEMENT = "CREATE TABLE REFAPP.USER_STATUS ("
			+ "ID BIGINT GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1) NOT NULL, "
			+ "USER_ID BIGINT NOT NULL, " + "STATUS VARCHAR(10) NOT NULL, " + "CREATED TIMESTAMP NOT NULL, "
			+ "MODIFIED	TIMESTAMP NOT NULL, " + "CONSTRAINT USER_STATUS_PK PRIMARY KEY (ID), "
			+ "CONSTRAINT USER_STATUS_FK1 FOREIGN KEY (USER_ID) REFERENCES REFAPP.USERS (ID) ON DELETE CASCADE, "
			+ "CONSTRAINT USER_STATUS_FK2 FOREIGN KEY (STATUS) REFERENCES REFAPP.REF_USER_STATUS (STATUS), "
			+ "CONSTRAINT USER_STATUS_CC1 CHECK (MODIFIED >= CREATED))";

	public static final String CREATE_TABLE_USER_PASSWORD_STATEMENT = "CREATE TABLE REFAPP.USER_PASSWORD ("
			+ "ID BIGINT GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1) NOT NULL, "
			+ "USER_ID BIGINT NOT NULL, " + "PASSWORD	VARCHAR(100) NOT NULL, " + "SALT	VARCHAR(100) NOT NULL, "
			+ "CONSTRAINT USER_PASSWORD_PK PRIMARY KEY (ID), "
			+ "CONSTRAINT USER_PASSWORD_FK1 FOREIGN KEY (USER_ID) REFERENCES REFAPP.USERS (ID) ON DELETE CASCADE)";

	public static final String CREATE_TABLE_USER_ADDRESS_STATEMENT = "CREATE TABLE REFAPP.USER_ADDRESS ("
			+ "ID BIGINT GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1) NOT NULL, "
			+ "USER_ID BIGINT NOT NULL, " + "ADDRESS VARCHAR(50), " + "POSTALCODE VARCHAR(10), "
			+ "MUNICIPALITY VARCHAR(50), " + "REGION VARCHAR(50), " + "COUNTRY VARCHAR(50), "
			+ "CONSTRAINT USER_ADDRESS_PK PRIMARY KEY (ID), "
			+ "CONSTRAINT USER_ADDRESS_FK1 FOREIGN KEY (USER_ID) REFERENCES REFAPP.USERS (ID) ON DELETE CASCADE)";

	public static final String CREATE_VIEW_USERS_V_STATEMENT = "CREATE VIEW REFAPP.USERS_V ("
			+ "USERNAME, FIRSTNAME, LASTNAME, BIRTHDATE, GENDER, EMAIL, PHONE, "
			+ "ADDRESS, POSTALCODE, MUNICIPALITY, REGION, COUNTRY, STATUS, CREATED, MODIFIED) "
			+ "AS SELECT U.USERNAME, D.FIRSTNAME, D.LASTNAME, D.BIRTHDATE, D.GENDER, D.EMAIL, D.PHONE, "
			+ "A.ADDRESS, A.POSTALCODE, A.MUNICIPALITY, A.REGION, A.COUNTRY, S.STATUS, S.CREATED, S.MODIFIED "
			+ "FROM REFAPP.USERS U, REFAPP.USER_DETAILS D, REFAPP.USER_ADDRESS A, REFAPP.USER_STATUS S "
			+ "WHERE U.ID = D.USER_ID AND U.ID = S.USER_ID AND U.ID = A.USER_ID";

	public static final String CREATE_TRIGGER_USERS_TRG1_STATEMENT = "CREATE TRIGGER REFAPP.USERS_TRG1 "
			+ "AFTER INSERT ON REFAPP.USERS REFERENCING NEW ROW AS NEWROW FOR EACH ROW BEGIN ATOMIC "
			+ "INSERT INTO REFAPP.USER_STATUS (USER_ID, STATUS, CREATED, MODIFIED) "
			+ "VALUES (NEWROW.ID, 'PENDING', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP); END";

	public static final String CREATE_TRIGGER_USERS_TRG2_STATEMENT = "CREATE TRIGGER REFAPP.USERS_TRG2 "
			+ "AFTER UPDATE ON REFAPP.USERS REFERENCING OLD ROW AS OLDROW FOR EACH ROW BEGIN ATOMIC "
			+ "UPDATE REFAPP.USER_STATUS SET MODIFIED = CURRENT_TIMESTAMP WHERE USER_ID = OLDROW.ID; END";

	public static final String CREATE_TRIGGER_USER_DETAILS_TRG1_STATEMENT = "CREATE TRIGGER REFAPP.USER_DETAILS_TRG1 "
			+ "AFTER UPDATE ON REFAPP.USER_DETAILS REFERENCING OLD ROW AS OLDROW FOR EACH ROW BEGIN ATOMIC "
			+ "UPDATE REFAPP.USER_STATUS SET MODIFIED = CURRENT_TIMESTAMP WHERE USER_ID = OLDROW.USER_ID; END";

	public static final String CREATE_TRIGGER_USER_PASSWORD_TRG1_STATEMENT = "CREATE TRIGGER REFAPP.USER_PASSWORD_TRG1 "
			+ "AFTER UPDATE ON REFAPP.USER_PASSWORD REFERENCING OLD ROW AS OLDROW FOR EACH ROW BEGIN ATOMIC "
			+ "UPDATE REFAPP.USER_STATUS SET MODIFIED = CURRENT_TIMESTAMP WHERE USER_ID = OLDROW.USER_ID; END";

	public static final String CREATE_TRIGGER_USER_ADDRESS_TRG1_STATEMENT = "CREATE TRIGGER REFAPP.USER_ADDRESS_TRG1 "
			+ "AFTER UPDATE ON REFAPP.USER_ADDRESS REFERENCING OLD ROW AS OLDROW FOR EACH ROW BEGIN ATOMIC "
			+ "UPDATE REFAPP.USER_STATUS SET MODIFIED = CURRENT_TIMESTAMP WHERE USER_ID = OLDROW.USER_ID; END";

	public static final String CREATE_TRIGGER_USER_STATUS_TRG1_STATEMENT = "CREATE TRIGGER REFAPP.USER_STATUS_TRG1 "
			+ "AFTER UPDATE OF STATUS ON REFAPP.USER_STATUS REFERENCING OLD ROW AS OLDROW FOR EACH ROW BEGIN ATOMIC "
			+ "UPDATE REFAPP.USER_STATUS SET MODIFIED = CURRENT_TIMESTAMP WHERE USER_ID = OLDROW.USER_ID; END";

	public static final String INSERT_REF_USER_STATUS_STATEMENT_1 = "INSERT INTO REFAPP.REF_USER_STATUS "
			+ "VALUES ('PENDING', 'User is pending activation')";

	public static final String INSERT_REF_USER_STATUS_STATEMENT_2 = "INSERT INTO REFAPP.REF_USER_STATUS "
			+ "VALUES ('ACTIVE', 'User is active')";

	public static final String INSERT_REF_USER_STATUS_STATEMENT_3 = "INSERT INTO REFAPP.REF_USER_STATUS "
			+ "VALUES ('SUSPENDED', 'User is suspended')";

	public static final String INSERT_REF_USER_STATUS_STATEMENT_4 = "INSERT INTO REFAPP.REF_USER_STATUS "
			+ "VALUES ('DELETED', 'User has been deleted')";

	public static final String INSERT_REF_GENDER_STATEMENT_1 = "INSERT INTO REFAPP.REF_GENDER "
			+ "VALUES ('MALE', 'Male')";

	public static final String INSERT_REF_GENDER_STATEMENT_2 = "INSERT INTO REFAPP.REF_GENDER "
			+ "VALUES ('FEMALE', 'Female')";
}
